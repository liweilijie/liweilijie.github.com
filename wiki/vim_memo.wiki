%toc vim.备忘
%title vim.备忘
%template vim

[http://doc.linuxpk.com/type1090_3.html fromlinuxpk]
_这里只是流水帐似的备忘哦。_

vim的基本模式(6种):
# 常态模式
# 插入模式
# 命令列模式
# 反白模式
# 选择模式
# Ex模式

^ 移至行首第一个非空白字元。<br />
$ 移动行尾。<br />
gg 移至档首(全文第一行之第一个非空白字元处)。<br />
G 移至档尾(全文最后一行的第一个非空白字元处)。<br />

在regular expression之中，^是匹配行首，$是匹配行尾。<br />

gg是vim的扩充功能，在vi之中可以用1G来移动至档首。G之原意是goto的意思。

w 移至次一个字首。<br />
W 同上，但是会忽略一些标点符号。<br />
e 移至次一个字字尾。<br />
E 同上，但是会忽略一些标点符号。<br />
b 移至前一个字字首。<br />
B 同上，但是会忽略一些标点符号。
n| 移至第n个字元处。n是从头算起的。

特殊的移动：
句子是以. ! ? 为区格的。段落是以空白行为区格的。
) 移至下一个句子首。
( 移至上一个句子首。
} 移至下一个段落首。
{ 移至上一个段落首。
% 这是匹配{}, [], ()用的。

何谓插入常态模式？

x 删除游标所在处之字元。
X 删除游标前之字元。
dd dw
dG 删至档尾。
d1G 删至档首。或dgg.
D 删至行尾。
d0 d^ 删至行首。

== 取代及还原 ==
- r 取代游标所在处之字元。
- R 进入取代模式，取代字元至ESC为止。
- cc 取代整行内容，或等同于S亦可。
- cw 替换一个单词。
- C 取代至行尾，即游标所在处以后的字都会被替换。或c$
- c0 c^ 取代至行首。
- s 替换一个字元为你所输入的字串，和R不同，R是覆盖的取代，s则是插入式的取代。
- 3r 按了3r后，你输入一个英文字，则三个字元皆会被你所输入的英文取代。
- 5J 将5行合并成一行。
- 5i A 然后按Esc,插入五个A,中文也可以。
- 2i sys Esc 插入syssys. 中文也可以！
- 5G 游标移至第五行，是从档首开始起算。和:5作用相同。

----

== 简单重排功能 ==
* :ce(enter) 本行文字置中。
* :ri(ght) 本行文字靠右。
* :le(ft) 本行文字靠左。
* gqap 整段重排。或gqip,在段落中任何地方都可以使用。
* gqq 本行重排。
* gqQ 全文重排。
 
== yank == 
yy 复制一行，或者Y也一样。
y^ 复制至行首。
y$ 复制至行尾。
p 粘贴至游标下。
P 粘贴到游标上。
"ayy 将本行文字复制至a缓冲区


==  使用不同的编码重载文件 ==
有时候vim打开文件，发现有乱码。想换一种编码重新再载入文件，怎么换呢？只要用下面的命令就可以了：

{{{class="brush:bash;"
:edit! ++enc=<encoding>
}}}
比如：

{{{class="brush:bash;"
:edit! ++enc=gb2312
}}}

=== 4. 粘贴代码时取消自动缩进 ===
VIM在粘贴代码时会自动缩进，把代码搞得一团糟糕，甚至可能因为某行的一个注释造成后面的代码全部被注释掉，我知道有同学这个时候会用vi去打开文件再粘贴上去（鄙人以前就是这样），其实需要先设置一下

`set paste`

然后再进入插入模式粘贴，代码就不会被自动缩进。可是敲代码的时候需要自动缩进，又得改回来:

`set nopaste`

最方便的方法就是在.vimrc中加一句：

`set pastetoggle=<F9>`

以后在插入模式下，只要按F9键就可以切换自动缩进。

